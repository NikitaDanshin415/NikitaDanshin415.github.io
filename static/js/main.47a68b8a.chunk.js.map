{"version":3,"sources":["helpers/manager.js","components/auth/Auth.js","components/auth/index.js","components/serchPanel/SearchPanel.js","components/serchPanel/index.js","components/projectListItem/ProjectListItem.js","components/projectList/index.js","components/projectList/ProjectList.js","components/plusBtn/PlusBtn.js","services/TmsApi.js","components/addProjectForm/AddProjectForm.js","components/home/Home.js","components/home/index.js","components/oidcAuth/OidcLogin.js","components/header/Header.js","components/notFound/NotFound.js","components/project/projectHeader/ProjectHeader.js","components/project/ProjectTestPlanElement/index.js","components/project/ProjectTestPlanElement/ProjectTestPlanElement.js","components/project/projectTestPlanList/ProjectTestPlanList.js","components/project/projectTestPlanList/index.js","components/project/projectTestCaseList/index.js","components/project/projectTestCaseList/ProjectTestCaseList.js","components/project/index.js","components/project/Project.js","App.js","index.js"],"names":["manager","UserManager","authority","client_id","response_type","scope","redirect_uri","post_logout_redirect_uri","login","signinRedirect","Auth","className","onClick","SearchPanel","state","term","onSerchChange","e","target","value","setState","props","placeholder","this","onChange","React","Component","ProjectListItem","project","date","Date","additionDate","to","id","projectName","projectRole","roleName","getDate","getMonth","getFullYear","ProjectList","elements","projects","map","item","PlusBtn","show","showModal","TmsApi","_apiBase","getToken","a","getUser","then","user","token","access_token","baseGetRequest","endPoint","params","fetch","method","cache","credentials","headers","res","json","catch","error","console","log","basePostRequest","data","mode","body","JSON","stringify","createProject","getProject","getProjects","createTestPlan","ProjectId","getTestPlans","projectId","AddProjectForm","api","addProject","preventDefault","projectData","hideModal","editField","hide","type","Home","isLoaded","showAddModel","onSearchChange","showAddProjectForm","hideAddProjectForm","projectParticipant","prevProps","prevState","snapshot","items","filter","toLowerCase","indexOf","visivleItems","search","addBtn","OidcLogin","loadUserInfo","response_mode","signinRedirectCallback","window","location","href","Header","profile","name","signoutRedirect","NotFound","src","ProjectHeader","projectInfo","role","ProjectTestPlanElement","classList","selected","select","element","testPlanName","description","ProjectTestPlanList","addTestPlan","TestPlanAddWindow","undefined","testPlans","list","el","selectedPlan","selectPlan","length","ProjectTestCaseList","Project","useState","useParams","additionToProject","projectStatus","projectStatusId","setProjectInfo","setTestPlans","showAddTestPlanWindow","setshowAddTestPlanWindow","setSelectedPlan","setError","useEffect","App","isLogin","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47a68b8a.chunk.js","sourcesContent":["import {UserManager} from \"oidc-client\";\r\n\r\nconst settings = {\r\n    authority: \"https://localhost:5001/\",\r\n    client_id: \"client_id_js\",\r\n    response_type: \"code\",\r\n    scope: \"openid profile TmsWebApi\",\r\n    redirect_uri: \"http://localhost:3000/oidcLogin\",\r\n    post_logout_redirect_uri: \"http://localhost:3000/\"\r\n}\r\n\r\nconst manager = new UserManager(settings);\r\n\r\nexport default manager;","import React from \"react\";\r\nimport './Auth.css'\r\nimport manager from \"../../helpers/manager\";\r\n\r\nfunction login(){\r\n    manager.signinRedirect();\r\n}\r\n\r\nfunction Auth() {\r\n    return (\r\n        <div className=\"Auth\">\r\n            <div className={'Auth_title'}>\r\n                <h1>\r\n                    Система управления тестовыми сценариями\r\n                </h1>\r\n            </div>\r\n            <div className={'Auth_buttons'}>\r\n                <button className={'transition'} onClick={login}>Войти</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n","import Auth from \"./Auth\";\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport './SearchPanel.css'\r\n\r\nexport default class SearchPanel extends React.Component{\r\n\r\n    state = {\r\n        term:''\r\n    };\r\n\r\n    onSerchChange = (e) =>{\r\n        const term = e.target.value;\r\n        this.setState({\r\n            term\r\n        });\r\n        this.props.onSerchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className={'searchPanel'}>\r\n                <input\r\n                    placeholder={\"Serch panel\"}\r\n                    value={this.state.term}\r\n                    onChange={this.onSerchChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import SearchPanel from \"./SearchPanel\";\r\n\r\nexport default SearchPanel;","import React from \"react\";\r\nimport \"./ProjectListItem.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ProjectListItem extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {project} = this.props;\r\n\r\n        const date = new Date(project.project.additionDate);\r\n\r\n        return (\r\n            <div className={\"projectItem\"}>\r\n                <Link to={`/project/${project.project.id}`}>\r\n                    <h2>{project.project.projectName}</h2>\r\n                </Link>\r\n                <div className={\"projectItem_info\"}>\r\n                    <div>\r\n                        <span>{project.projectRole.roleName}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Дата создания проекта: {date.getDate()}.{date.getMonth() + 1 }.{date.getFullYear()}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import ProjectList from \"./ProjectList\";\r\n\r\nexport default ProjectList;","import React from \"react\";\r\nimport ProjectListItem from \"../projectListItem/ProjectListItem\";\r\nimport \"./ProjectList.css\"\r\n\r\nconst ProjectList = ({projects}) => {\r\n\r\n\r\n    const elements = projects.map((item) => {\r\n        return (\r\n            <li key={item.id} className={\"list-group-item\"}>\r\n                <ProjectListItem project={item}/>\r\n            </li>\r\n        );\r\n    })\r\n\r\n\r\n    return (\r\n        <ul>\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from \"react\";\r\nimport \"./PlusBtn.css\"\r\n\r\nexport default class PlusBtn extends React.Component {\r\n    render() {\r\n        const show = this.props.showModal;\r\n        return (\r\n            <div className={'plus_container'}>\r\n                <div className={'plusBtn'} onClick={show}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import manager from \"../helpers/manager\";\r\n\r\nexport default class TmsApi {\r\n    _apiBase = 'https://localhost:44354/api/1';\r\n\r\n    getToken = async () => {\r\n        let token;\r\n        await manager\r\n            .getUser()\r\n            .then((user) => {\r\n                token = user.access_token;\r\n            })\r\n\r\n        return await token\r\n    }\r\n\r\n\r\n    /**\r\n     * Базовая функция для отправки POST зарпосов.\r\n     * @param endPoint - конечная точка запроса.\r\n     * @param params - параметр для запроса, в виде строки.\r\n     * @returns {Promise<any>}\r\n     */\r\n    baseGetRequest = async (endPoint, params) => {\r\n        return this\r\n            .getToken()\r\n            .then(async (token) => {\r\n                return await fetch(`${this._apiBase}/${endPoint}/${params}`, {\r\n                    method: \"GET\",\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': '*/*',\r\n                        'Content-Type': 'application/json',\r\n                        'Accept-Encoding': 'gzip, deflate, br',\r\n                        'Connection': 'keep-alive',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                });\r\n            })\r\n            .then((res) => {\r\n                return res.json()\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                return error;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Базовая функция для отправки POST зарпосов.\r\n     * @param endPoint - конечная точка запроса.\r\n     * @param data - JS объект с параметрами для выполнения запроса.\r\n     * @returns {Promise<any>}\r\n     */\r\n    basePostRequest = async (endPoint, data) => {\r\n        return this\r\n            .getToken()\r\n            .then(async (token) => {\r\n                return await fetch(`${this._apiBase}/${endPoint}`, {\r\n                    method: \"POST\",\r\n                    mode: 'cors',\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': '*/*',\r\n                        'Content-Type': 'application/json',\r\n                        'Accept-Encoding': 'gzip, deflate, br',\r\n                        'Connection': 'keep-alive',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                });\r\n            })\r\n            .then((res) => {\r\n                return res.json()\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Добавление нового проекта.\r\n     * @param data\r\n     * @returns {Promise<*>}\r\n     */\r\n    createProject = async (data) => {\r\n        return await this.basePostRequest(\"Project\", data)\r\n    }\r\n\r\n    /**\r\n     * Получить проект по id.\r\n     * @param id\r\n     * @returns {Promise<*>}\r\n     */\r\n    getProject = async (id) => {\r\n        return await this.baseGetRequest(\"ProjectParticipant\", id);\r\n    }\r\n\r\n    /**\r\n     * Получить список всех проектов пользователя.\r\n     * @returns {Promise<*>}\r\n     */\r\n    getProjects = async () => {\r\n        return await this.baseGetRequest(\"ProjectParticipant\", \"\");\r\n    }\r\n\r\n    /**\r\n     * Добавить в систему план тестирования.\r\n     * @returns {Promise<*>}\r\n     */\r\n    createTestPlan = async (ProjectId) => {\r\n        const data = {\r\n            \"TestPlanName\": \"test from ui\",\r\n            \"Description\": \"string\",\r\n            \"ProjectId\": ProjectId\r\n        }\r\n\r\n        return await this.basePostRequest(\"TestPlan\", data)\r\n    }\r\n\r\n    /**\r\n     * Получить список всех планов тестирования проекта.\r\n     * @returns {Promise<*>}\r\n     */\r\n    getTestPlans = async (projectId) => {\r\n        return await this.baseGetRequest(\"TestPlan\", projectId);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./AddProjectForm.css\";\r\nimport TmsApi from \"../../services/TmsApi\";\r\n\r\nexport default class AddProjectForm extends React.Component {\r\n\r\n    state = {\r\n        projectName: \"\",\r\n    }\r\n\r\n    api = new TmsApi();\r\n\r\n    addProject = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const projectData = {\r\n            projectName: this.state.projectName,\r\n        }\r\n\r\n        await this.api\r\n            .createProject(projectData)\r\n\r\n        this.props.hideModal();\r\n    }\r\n\r\n    editField = (e) => {\r\n        this.setState({\r\n            projectName: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const hide = this.props.hideModal;\r\n\r\n        return (\r\n            <div className={\"modal_shade\"}>\r\n                <div className={\"modal\"}>\r\n                    <div className={\"modal_header\"}>\r\n                        <h2>Добавление проекта</h2>\r\n                        <div className={\"hide_button\"} onClick={hide}>X</div>\r\n                    </div>\r\n                    <div className={\"modal_content\"}>\r\n\r\n                        <form className={\"modal_addForm\"}>\r\n                            <input type={\"text\"} onChange={this.editField}/>\r\n                            <button onClick={this.addProject}>Добавить</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport './Home.css'\r\nimport manager from \"../../helpers/manager\";\r\nimport SearchPanel from \"../serchPanel\";\r\nimport ProjectList from \"../projectList\";\r\nimport PlusBtn from \"../plusBtn/PlusBtn\";\r\nimport AddProjectForm from \"../addProjectForm/AddProjectForm\";\r\nimport TmsApi from \"../../services/TmsApi\";\r\n\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    state = {\r\n        isLoaded: false,\r\n        projects: [],\r\n        term: '',\r\n        showAddModel: false\r\n    }\r\n\r\n    api = new TmsApi();\r\n\r\n    getProjects = async () => {\r\n       return this.api.getProjects();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.api.getProjects()\r\n            .then((res) => {\r\n                this.setState({\r\n                    projects: res.projectParticipant\r\n                });\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.showAddModel !== this.state.showAddModel) {\r\n            this.getProjects()\r\n                .then((res) =>{\r\n                    console.log(res)\r\n                    this.setState({\r\n                        projects: res.projectParticipant\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    search(items, term) {\r\n        if (term === '') {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.project.projectName.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    showAddProjectForm = () => {\r\n        this.setState({\r\n            showAddModel: true\r\n        })\r\n    }\r\n\r\n    hideAddProjectForm = () => {\r\n        this.setState({\r\n            showAddModel: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {projects, term} = this.state;\r\n        const visivleItems = this.search(projects, term);\r\n\r\n        let addBtn = null;\r\n        if (this.state.showAddModel) {\r\n            addBtn = <AddProjectForm hideModal={this.hideAddProjectForm}/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"Home\">\r\n                <SearchPanel\r\n                    onSerchChange={this.onSearchChange}\r\n                />\r\n                <ProjectList\r\n                    projects={visivleItems}\r\n                />\r\n                <PlusBtn\r\n                    showModal={this.showAddProjectForm}\r\n                />\r\n                {addBtn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Home from \"./Home\";\r\n\r\nexport default Home;","import {UserManager} from \"oidc-client\";\r\n\r\nexport const  OidcLogin = () => {\r\n    const manager = new UserManager({\r\n        loadUserInfo: true,\r\n        response_mode: \"query\"\r\n    });\r\n\r\n    manager.signinRedirectCallback()\r\n        .then( user => {\r\n            console.log(user);\r\n            window.location.href = \"http://localhost:3000/\";\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n    return(\r\n        \"\"\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport manager from \"../../helpers/manager\";\r\nimport \"./Header.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n    state = {\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        manager.getUser().then(async res => {\r\n            await this.setState({\r\n                user: res.profile.name\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        function logout() {\r\n            manager.signoutRedirect();\r\n        }\r\n\r\n        return (\r\n            <header>\r\n                <div className={\"header_title\"}>\r\n                    <Link to={\"/\"}>\r\n                        <div>\r\n                            <h1>Система управления тестовыми сценариями</h1>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                <div className={\"header_buttons\"}>\r\n                    <span>{this.state.user}</span>\r\n                    <button className={\"transition\"} onClick={logout}>Выйти</button>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}","import \"./NotFound.css\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className={'NotFound'}>\r\n            <img src=\"https://i.imgur.com/cpoBxhU.png\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\n\r\nconst ProjectHeader = (props) =>{\r\n    const {projectInfo, role} = props;\r\n\r\n    const date = new Date(projectInfo.additionDate);\r\n    return (\r\n        <div className={\"projectHeader\"}>\r\n            <h2>{projectInfo.projectName}</h2>\r\n            <div className={\"projectItem_info\"}>\r\n                <div>\r\n                    <span>{role.roleName}</span>\r\n                </div>\r\n                <div>\r\n                    <span>Дата создания проекта: {date.getDate()}.{date.getMonth() + 1}.{date.getFullYear()}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectHeader;","import ProjectTestPlanElement from \"./ProjectTestPlanElement\";\r\nexport default ProjectTestPlanElement;","import './ProjectTestPlanElement.css'\r\n\r\nconst ProjectTestPlanElement = (props) =>{\r\n\r\n\r\n    const selectItem = () =>{\r\n        props.select(props.element.id)\r\n    }\r\n    let classList = \"projectTestPlanElement\";\r\n\r\n    if(props.selected){\r\n        classList += \" selected\"\r\n    }\r\n\r\n    return(\r\n        <div className={classList} onClick={selectItem}>\r\n            <h3>{props.element.testPlanName}</h3>\r\n            <span>{props.element.description}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectTestPlanElement;","import PlusBtn from \"../../plusBtn/PlusBtn\";\r\nimport TmsApi from \"../../../services/TmsApi\";\r\nimport ProjectTestPlanElement from \"../ProjectTestPlanElement\";\r\n\r\nconst ProjectTestPlanList = (props) => {\r\n\r\n    const api = new TmsApi();\r\n\r\n    const addTestPlan = async () => {\r\n        props.TestPlanAddWindow(true);\r\n        await api.createTestPlan(props.projectId);\r\n        props.TestPlanAddWindow(false);\r\n    }\r\n\r\n\r\n    if(props.testPlans===undefined){\r\n        return null\r\n    }\r\n\r\n    const list = props.testPlans.map((el) => {\r\n        let selected = false;\r\n\r\n        if (el.id === props.selectedPlan){\r\n            selected = true;\r\n        }\r\n\r\n        return (\r\n            <li key={el.id} >\r\n                <ProjectTestPlanElement element={el} select = {props.selectPlan} selected = {selected}/>\r\n            </li>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className={\"projectTestPlan\"}>\r\n            <div>\r\n                <h2>Планы тестирования</h2>\r\n            </div>\r\n            <div>\r\n                <input type={\"text\"}/>\r\n            </div>\r\n            <div>\r\n                Всего= {list.length}\r\n                <ul>{list}</ul>\r\n            </div>\r\n            <PlusBtn showModal={addTestPlan}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectTestPlanList;\r\n\r\n","import ProjectTestPlanList from \"./ProjectTestPlanList\";\r\n\r\nexport default ProjectTestPlanList;","import ProjectTestCaseList from \"./ProjectTestCaseList\";\r\n\r\nexport default ProjectTestCaseList;","const ProjectTestCaseList = (props) =>{\r\n    return(\r\n        <div className={\"projectTestCase\"}>\r\n            <h2>Сценарии тетсирования тестирования</h2>\r\n            <div>\r\n                Выбран план с id : {props.selectedPlan}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectTestCaseList;","import Project from \"./Project\";\r\n\r\nexport default Project;","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport TmsApi from \"../../services/TmsApi\";\r\nimport NotFound from \"../notFound/NotFound\";\r\nimport './Project.css'\r\nimport ProjectHeader from \"./projectHeader/ProjectHeader\";\r\nimport ProjectTestPlanList from \"./projectTestPlanList\";\r\nimport ProjectTestCaseList from \"./projectTestCaseList\";\r\n\r\nconst Project = () => {\r\n    const [projectId] = useState(useParams().id);\r\n\r\n    const [projectInfo, setProjectInfo] = useState({\r\n        additionToProject: null,\r\n        id: null,\r\n        project: {\r\n            additionDate: null,\r\n            id: null,\r\n            projectName: null,\r\n            projectStatus: null,\r\n            projectStatusId: null,\r\n        },\r\n        projectRole: {\r\n            id: null,\r\n            roleName: null,\r\n        }\r\n    });\r\n    const [testPlans, setTestPlans] = useState([]);\r\n    const [showAddTestPlanWindow, setshowAddTestPlanWindow] = useState([false]);\r\n    const [selectedPlan, setSelectedPlan] = useState(null)\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n\r\n    const api = new TmsApi();\r\n    useEffect(() => {\r\n        api\r\n            .getProject(projectId)\r\n            .then((json) => {\r\n                setProjectInfo({\r\n                    additionToProject: json.additionToProject,\r\n                    id: json.id,\r\n                    project: {\r\n                        additionDate: json.project.additionDate,\r\n                        id: json.project.id,\r\n                        projectName: json.project.projectName,\r\n                        projectStatus: json.project.projectStatus,\r\n                        projectStatusId: json.project.projectStatusId,\r\n                    },\r\n                    projectRole: {\r\n                        id: json.projectRole.id,\r\n                        roleName: json.projectRole.roleName\r\n                    }\r\n                })\r\n            }).catch((error) => {\r\n            setError(true)\r\n            console.log(error)\r\n        });\r\n\r\n        api\r\n            .getTestPlans(projectId)\r\n            .then((json) =>{\r\n                setTestPlans(json.testPlans)\r\n            })\r\n            .catch((error) => {\r\n                setError(true)\r\n                console.log(error);\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        api\r\n            .getTestPlans(projectId)\r\n            .then((json) =>{\r\n                setTestPlans(json.testPlans)\r\n            })\r\n            .catch((error) => {\r\n                setError(true)\r\n                console.log(error);\r\n            })\r\n    }, [showAddTestPlanWindow])\r\n\r\n\r\n\r\n    if (error) {\r\n        return <NotFound/>\r\n    } else {\r\n\r\n        return (\r\n            <div>\r\n                <ProjectHeader projectInfo={projectInfo.project} role={projectInfo.projectRole}/>\r\n                <div className={\"project_content\"}>\r\n                    <ProjectTestPlanList\r\n                        projectId = {projectId}\r\n                        testPlans={testPlans}\r\n                        selectPlan={setSelectedPlan}\r\n                        TestPlanAddWindow = {setshowAddTestPlanWindow}\r\n                        selectedPlan={selectedPlan}\r\n                    />\r\n                    <ProjectTestCaseList selectedPlan={selectedPlan}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Project;","import './App.css';\r\nimport Auth from \"./components/auth\";\r\nimport Home from \"./components/home\";\r\nimport manager from \"./helpers/manager\";\r\nimport React from \"react\";\r\nimport {Route, Routes, BrowserRouter as Router} from \"react-router-dom\";\r\nimport {OidcLogin} from \"./components/oidcAuth/OidcLogin\"\r\nimport Header from \"./components/header/Header\";\r\nimport Project from \"./components/project\";\r\nimport NotFound from \"./components/notFound/NotFound\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n    state = {\r\n        isLogin: false,\r\n        user: null,\r\n        token: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await manager.getUser()\r\n            .then((user) => {\r\n                if (user) {\r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user.profile.name,\r\n                        token: user.access_token,\r\n                    })\r\n                } else {\r\n                    console.log(\"user not logged in\")\r\n                    this.setState({\r\n                        isLogin: false,\r\n                        user: null,\r\n                        token: null,\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLogin) {\r\n            return (\r\n\r\n                <Router>\r\n                    <div className=\"App\">\r\n                        <Header user={this.state.user}/>\r\n                        <Routes>\r\n                            <Route path=\"/project/:id\" element={<Project/>}/>\r\n                            <Route path=\"/\" element={<Home/>}/>\r\n                            <Route path=\"*\" element={<NotFound/>}/>\r\n                        </Routes>\r\n                    </div>\r\n                </Router>\r\n\r\n\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"App auth\">\r\n                <Router>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Auth/>}/>\r\n                        <Route path=\"/oidcLogin\" element={<OidcLogin/>}/>\r\n                        <Route path=\"*\" element={<NotFound/>}/>\r\n                    </Routes>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}